<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubIQio</title>
    <link>http://ubiqio.com/</link>
    <description>Recent content on ubIQio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Sep 2015 14:29:14 +0100</lastBuildDate>
    <atom:link href="http://ubiqio.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Test</title>
      <link>http://ubiqio.com/test/</link>
      <pubDate>Mon, 21 Sep 2015 14:29:14 +0100</pubDate>
      
      <guid>http://ubiqio.com/test/</guid>
      <description>

&lt;h2 id=&#34;just-a-test:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Just a test&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>shop</title>
      <link>http://ubiqio.com/shop/</link>
      <pubDate>Mon, 21 Sep 2015 14:29:14 +0100</pubDate>
      
      <guid>http://ubiqio.com/shop/</guid>
      <description>&lt;p&gt;&lt;img align=&#34;left&#34; width=&#34;100px&#34; style=&#34;padding-left:10px; padding-right:20px; padding-top:5px;padding-bottom:5px&#34; src=&#34;http://ubiqio.com/img/snipcart150.png&#34;&gt;
The &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
  store uses &lt;a href=&#34;https://snipcart.com/&#34;&gt;Snipcart&lt;/a&gt; to provide you with a secure and easy way to buy.&lt;/p&gt;

&lt;p&gt;Before ordering, read store terms here. For shipping terms and countries, see here.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://ubiqio.com/doc/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/README/</guid>
      <description>

&lt;h1 id=&#34;docs:04c6e90faac2675aa89e2176d2eec7d8&#34;&gt;docs&lt;/h1&gt;

&lt;p&gt;Markdown docs for Ardhat website&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Battery Operation</title>
      <link>http://ubiqio.com/doc/battery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/battery/</guid>
      <description>

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 can perform full charge management of a single LiPo cell, and a custom 2200mAh battery that fits snugly between the shield headers is available in the &lt;a href=&#34;http://ubiqio.com/shop&#34;&gt;store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;width:300px;height:300px&#34; src=&#34;http://ubiqio.com/media/005AB.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;Whilst operating on battery, &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 generates the supplies required for the Raspberry Pi and &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 peripherals from a boost converter. When the remaining battery capacity reaches a predetermined level, the Raspberry Pi can be  gracefully shutdown over the Firmata communication channel. The same channel can be  used to schedule events, for example to have a host wake up and perform a time-lapse image capture.  When the battery voltage reaches a critical level, all circuits are switched off to avoid damage to the battery due to over-discharging.&lt;/p&gt;

&lt;h3 id=&#34;charge-control-system:dc4df0175cfa07cfdc9b78ac4adb3b60&#34;&gt;Charge Control System&lt;/h3&gt;

&lt;p&gt;When connected to external power, the battery is charged using a constant-current /constant-voltage charge algorithm, with pre-conditioning and charge termination phases.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 will charge and maintain any single 3.7V LiPo cell attached to the industry standard 2-pin JST-PH connector.&lt;/p&gt;

&lt;div class=&#34;note warning&#34;&gt;
  &lt;p&gt;
Any cell with a standard JST-PH connector that physically fits your application may also be used, but make sure the polarity is correct before attachment.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;If external power is disconnected, Ardhat transitions seamlessly to battery operation, and sends a notification to the Raspberry Pi over the inter-processor communication channel.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>http://ubiqio.com/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/community/</guid>
      <description>

&lt;h2 id=&#34;a-community-headline:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;A Community headline&lt;/h2&gt;

&lt;p&gt;Some Content&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>http://ubiqio.com/doc/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/configuration/</guid>
      <description>

&lt;h4 id=&#34;protecting-shield-pins:a66b35d20295cb764719ac8bd35837ec&#34;&gt;Protecting shield pins&lt;/h4&gt;

&lt;div class=&#34;note warning&#34;&gt;
  &lt;p&gt;Before fitting &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 to a Raspberry Pi, be sure that you either fit spacers between the boards or place the insulating foam supplied on the Pi HDMI connector to prevent short-circuits on the shield connector which may cause damage to &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;h4 id=&#34;arduino-shield-headers:a66b35d20295cb764719ac8bd35837ec&#34;&gt;Arduino shield headers&lt;/h4&gt;

&lt;p&gt;Some versions of &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 do not come with headers pre installed, which gives you the option of running as a pure lightweight HAT, or as an Arduino compatible module. If you want to populate the supplied Arduino headers, a good trick to make sure you get them straight is to fit a shield to the headers &lt;em&gt;before&lt;/em&gt; soldering. Use a fine tipped iron and fine core solder (1mm).&lt;/p&gt;

&lt;h4 id=&#34;writing-to-hat-eeprom:a66b35d20295cb764719ac8bd35837ec&#34;&gt;Writing to HAT eeprom&lt;/h4&gt;

&lt;p&gt;By default on the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 this is enabled. To disable remove the solder jumper bridge from the CFG jumper next to the RTC output pin.&lt;/p&gt;

&lt;h4 id=&#34;radio-antenna:a66b35d20295cb764719ac8bd35837ec&#34;&gt;Radio antenna&lt;/h4&gt;

&lt;p&gt;If you have a radio equipped &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
, you&amp;rsquo;ll need to attach an antenna to the board.&lt;/p&gt;

&lt;div class=&#34;note warning&#34;&gt;
  &lt;p&gt;Do not load the radio driver without an antenna attached, as running the transmitter without an appropriate load could cause permanent damage to the radio module&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The attach point is near the radio module, and is marked with an antenna symbol on the top side of the board. The antenna is best left straight but will also work coiled but with a small effect on RSS (Received Signal Strength). The length of wire needed depends on the radio module frequency you have selected, and &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 is supplied with a &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; wave antenna of appropriate length. For reference, the required antenna lengths are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;433MHz:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; wave = 164.7mm&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; wave = 329.4mm&lt;/li&gt;
&lt;li&gt;full wave = 692.7mm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;868MHz:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; wave = 82.2mm&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; wave = 164.3mm&lt;/li&gt;
&lt;li&gt;full wave = 345.5mm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;915MHz:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; wave = 77.9mm&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; wave = 155.9mm&lt;/li&gt;
&lt;li&gt;full wave = 327.8mm&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>http://ubiqio.com/doc/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/contributing/</guid>
      <description>

&lt;p&gt;So you&amp;rsquo;ve got an awesome idea to throw into &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
. Great! Head over to &lt;a href=&#34;http://ubiqio.com/community&#34;&gt;the forum&lt;/a&gt; and let us know!&lt;/p&gt;

&lt;h2 id=&#34;updating-documentation:cc4aac3e9be04e0413c9520f223b493c&#34;&gt;Updating Documentation&lt;/h2&gt;

&lt;p&gt;We want the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 documentation to be the best it can be. We&amp;rsquo;ve
open-sourced our docs and we welcome any pull requests if you find it
lacking.&lt;/p&gt;

&lt;p&gt;You can access the documentation for &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 just by clicking the pencil at the top of each document.&lt;/p&gt;

&lt;p&gt;All documentation pull requests should be directed at &lt;code&gt;master&lt;/code&gt;. Pull
requests directed at another branch will not be accepted.&lt;/p&gt;

&lt;h2 id=&#34;finally:cc4aac3e9be04e0413c9520f223b493c&#34;&gt;Finally&amp;hellip;&lt;/h2&gt;

&lt;div class=&#34;note&#34;&gt;
  &lt;h5&gt;Let us know what could be better!&lt;/h5&gt;
  &lt;p&gt;
    Both using and hacking on &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 should be fun, simple, and easy, so if for
    some reason you find it’s a pain, please &lt;a
    href=&#34;http://ubiqio.com/community&#34;&gt;flag it&lt;/a&gt; on
    the forum describing your experience so we can make it better.
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>DIYnest</title>
      <link>http://ubiqio.com/news/DIYnest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/news/DIYnest/</guid>
      <description>&lt;p&gt;Checkout the &lt;a href=&#34;http://ubiqio.com/doc/js/&#34;&gt;howto&lt;/a&gt; on using Javascript with &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
.&lt;/p&gt;

&lt;p&gt;For a more in-depth example, see this &lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/&#34;&gt;article&lt;/a&gt; which shows how to build a simple &lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/#home-monitoring&#34;&gt;home-monitoring system&lt;/a&gt;, similar to commercial products like Nest and Hive.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/#home-monitoring&#34;&gt;&lt;img  style=&#34;height:200px&#34; src=&#34;http://ubiqio.com/media/diynest.jpg&#34; alt=&#34;DIYnest&#34; title=&#34;DIYnest&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you need it, you can get a proto board that fits the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 aesthetic in the &lt;a href=&#34;http://ubiqio.com/shop&#34;&gt;store&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Decoding LoRa</title>
      <link>http://ubiqio.com/news/lora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/news/lora/</guid>
      <description>&lt;p&gt;From &lt;a href=&#34;http://hackaday.com/2016/01/31/hacking-the-internet-of-things-decoding-lora/#comment-2906254&#34;&gt;Hackaday&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img align=&#34;right&#34; style=&#34;width:200px;height:200px; padding-left: 10px; padding-top: 5px&#34; src=&#34;http://ubiqio.com/media/DecodingLora_Project.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;Getting software-defined radio (SDR) tools into the hands of the community has been great for the development and decoding of previously-cryptic, if not encrypted, radio signals the world over.&lt;br /&gt;
As soon as there’s a new protocol or modulation method, it’s in everyone’s sights. A lot of people have been working on LoRa, and &lt;a href=&#34;https://revspace.nl/Bertrik&#34;&gt;bertrik&lt;/a&gt; at &lt;a href=&#34;https://revspace.nl/DecodingLora&#34;&gt;RevSpace in The Hague&lt;/a&gt; has done some work of his own, and put together an amazing summary of the state of the art, including an &lt;a href=&#34;https://github.com/bertrik/loratest&#34;&gt;Arduino library&lt;/a&gt; for using it, based on the RadioHead libraries.&lt;/p&gt;

&lt;p&gt;You can  get a LoRa equipped  &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 in the &lt;a href=&#34;http://ubiqio.com/shop&#34;&gt;store&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Environment Sensor</title>
      <link>http://ubiqio.com/doc/env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/env/</guid>
      <description>&lt;p&gt;In addition to the basic functions of Arduino compatibility and power management,  &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&lt;strong&gt;-I&lt;/strong&gt; has a barometric pressure sensor or altimeter, which is designed to work in unison with the 9-DOF &lt;a href=&#34;http://ubiqio.com/doc/imu&#34;&gt;IMU&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&lt;strong&gt;-E&lt;/strong&gt; includes both pressure and humidity sensing (but without the IMU).&lt;/p&gt;

&lt;p&gt;These functions are performed by Bosch SensorTec integrated environmental sensors, the BMP280 and the BME280.&lt;/p&gt;

&lt;p&gt;From the Bosch &lt;a href=&#34;http://www.bosch-sensortec.com/de/homepage/products_3/environmental_sensors_1/bme280/bme280_1&#34;&gt;website&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img align=&#34;right&#34; style=&#34;width:200px;height:200px; padding-left: 10px; padding-top: 5px&#34; src=&#34;http://ubiqio.com/media/BME280.jpg&#34;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The humidity sensor features an extremely fast response time which supports performance requirements for emerging applications such as context awareness, and high accuracy over a wide temperature range. The pressure sensor is an absolute barometric pressure sensor with features exceptionally high accuracy and resolution at very low noise. The integrated temperature sensor has been optimized for very low noise and high resolution. It is primarily used for temperature compensation of the pressure and humidity sensors, and can also be used for estimating ambient temperature.&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The BMP280 is largely compatible with the popular &lt;a href=&#34;https://github.com/Ardhat/RTIMULib-Arduino&#34;&gt;RTIMUlib&lt;/a&gt;, but requires some register changes as it was created for the BMP180, the predecessor of the BMP280.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a native BMP280 library written by Limor Fried and Kevin Townsend, of Adafruit fame, on the &lt;a href=&#34;https://github.com/Ardhat/Adafruit_BMP280_Library&#34;&gt;Ardhat Github repo&lt;/a&gt;, and a BME280 version with humidity functions also &lt;a href=&#34;https://github.com/Ardhat/Adafruit_BME280_Library/blob/master/Adafruit_BME280.cpp&#34;&gt;available&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The official Bosch driver for BMP280 is on the &lt;a href=&#34;https://github.com/BoschSensortec/BMP280_driver&#34;&gt;Bosch SensorTec Github repo&lt;/a&gt;, as is the  &lt;a href=&#34;https://github.com/BoschSensortec/BME280_driver&#34;&gt;BME280 driver&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more in-depth info on the devices, refer to the &lt;a href=&#34;https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BMP280-DS001-12.pdf&#34;&gt;BMP280&lt;/a&gt; and &lt;a href=&#34;https://ae-bst.resource.bosch.com/media/_tech/media/datasheets/BST-BME280_DS001-11.pdf&#34;&gt;BME280&lt;/a&gt; datasheets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Expansion</title>
      <link>http://ubiqio.com/doc/expansion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/expansion/</guid>
      <description>

&lt;h3 id=&#34;arduino-compatibility:636f077861fb676b2ad14870f3ad09aa&#34;&gt;Arduino Compatibility&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 contains a complete Arduino Uno R3 compatible subsystem clocked at 16MHz.  Most newer technologies, including the Raspberry Pi itself,  operate at 3.3V. This can be a problem when connecting to common real world systems like servos and Smart LEDs that operate at 5V.  &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 has the necessary interface circuitry to act as a bridge between the 5V and 3V worlds, allowing the Raspberry Pi to connect with either system type. &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 may also be operated independently of a Raspberry Pi by powering it from either an external supply or the built in LiPo.&lt;/p&gt;

&lt;h3 id=&#34;arduino-shield-support:636f077861fb676b2ad14870f3ad09aa&#34;&gt;Arduino Shield Support&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 supports all Uno compatible shields. AVR SPI is available on the ICSP header which is used by the majority of shields that require SPI.  The latest R3 features such as IOREF are included. For more information see the &lt;a href=&#34;http://ubiqio.com/doc/io/&#34;&gt;IO usage page&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;raspberry-pi-hugoshortcode-5-communication:636f077861fb676b2ad14870f3ad09aa&#34;&gt;Raspberry Pi &amp;lt;&amp;gt; &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 communication&lt;/h3&gt;

&lt;p&gt;The Raspberry Pi and Arduino can communicate over both Serial and I2C. Serial is used for the main inter-processor communication, and &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 can be programmed using the Arduino IDE through the Raspberry Pi serial port. DTR emulation is provided using Raspberry Pi GPIO 22.&lt;/p&gt;

&lt;p&gt;When the Raspberry Pi is active, it is the master on the  I2C bus, and is responsible for setup of the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
  I2C peripherals (e.g.IMU, Altimeter, RTC etc.).  When the Raspberry Pi is inactive, &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 can master the bus and interrogate the peripherals.  For example by watching the RTC, the Raspberry Pi can be started when the next crontab entry is about to come due.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>http://ubiqio.com/doc/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/github/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s documentation is kept on github and you can help improve it.&lt;/p&gt;

&lt;p&gt;Just click the pencil link  at the top right of any of the docs to go straight there.&lt;/p&gt;

&lt;p&gt;(You may need to clone the repo and generate a pull request).&lt;/p&gt;

&lt;p&gt;In addition, all Ardhat software is available at the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 github repository
&lt;a href=&#34;https://github.com/Ardhat&#34;&gt;https://github.com/Ardhat&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I/O usage</title>
      <link>http://ubiqio.com/doc/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/io/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 has full Arduino Shield compatibility, as well as being Raspberry Pi HAT compliant. Some of the pins have a special usage in the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 environment as detailed below:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Raspberry Pi GPIO&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I2C-SDA –  I2C bus for communication with RTC, IMU, ENV and Arduino&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I2C-SCL –  I2C bus for communication with RTC, IMU, ENV and Arduino&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 14&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Serial RXD – used for programming the Arduino with GPIO 13&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 15&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Serial TXD – used for programming the Arduino with GPIO 13&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 18&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;PiPWM – connected to a 3V-5V level shifter to drive e.g. WS2811 LED strips (see &lt;strong&gt;SPARE&lt;/strong&gt; below)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GPIO 22&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Arduino ‘Reset’ line – used for programming with serial port&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ID_SC&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;HAT EEPROM Clock – used for read-writing the ArdHAT EEPROM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ID_SD&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;HAT EEPROM Data – used for read-writing the ArdHAT EEPROM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5V&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Connected to Ardhat 5V through a MOSFET switch controlled by Ardhat A3 (see below) NB even when the switch is off current can flow from the Raspberry Pi to Ardhat&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Arduino I/O&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;serial data from Raspberry Pi&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;serial data to Raspberry Pi&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Radio and peripheral Interrupt&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D10&lt;/strong&gt;*&lt;/td&gt;
&lt;td&gt;Radio node SPI SS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D11&lt;/strong&gt;*&lt;/td&gt;
&lt;td&gt;Radio node SPI MOSI&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D12&lt;/strong&gt;*&lt;/td&gt;
&lt;td&gt;Radio node SPI MISO&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;D13&lt;/strong&gt;*&lt;/td&gt;
&lt;td&gt;Radio node SPI SCK&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;PowerOn/Off  to Raspberry Pi&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I2C SDA to Raspberry Pi and Peripherals&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;I2C SCL to Raspberry Pi and Peripherals&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A6&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;External supply voltage monitor&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;A7&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Power/Nav Switch and LiPo  voltage  monitor&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Vin&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Connected to the 2.1mm DC Jack through polarity protection&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5V&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Supplied either from the Ext-&amp;gt; 5V Buck converter, or the LiPo-&amp;gt;5V Boost converter or the Raspberry Pi MicroUSB 5V supply&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3.3V&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Supplied through a 300mA linear regulator on Ardhat (NB if fitted, the radio module may consume 150mA peak during transmission bursts)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SPARE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The unused shield pin next to IOREF is the 5V level shifted O/P from GPIO18 (PiPWM) (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;*The above marked pins are available for use if the radio module is not fitted.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Additional&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ICSP Header&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Standard Arduino programming header can be used e.g. for burning new bootloader&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Solar&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.1&amp;rdquo; header next to ICSP can be connected to a 6V solar panel to charge the LiPo cell while Raspberry Pi is turned off and Ardhat is on sleep mode&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;RTC Clock Out&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;PCF8653 RTC can be programmed to generate a Clock O/P on the test point next to Pi GPIO26&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>IMU</title>
      <link>http://ubiqio.com/doc/imu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/imu/</guid>
      <description>

&lt;h3 id=&#34;inertial-measurement-unit:53cfe453f14e91a110c18a8c31803e02&#34;&gt;Inertial Measurement Unit&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://ubiqio.com/media/mpu9250.jpg&#34; alt=&#34;image alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The IMU is connected to the I2C bus. It is mounted at &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s  geographic center to avoid offset errors. It consists of an Invensense MPU9250, which provides&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3-axis gyroscope&lt;/li&gt;
&lt;li&gt;3-axis accelerometer&lt;/li&gt;
&lt;li&gt;3-axis magnetometer (compass)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During normal operation, these devices may be monitored directly by either processor, but in sleep mode they can be monitored by &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 and used to wakeup the Raspberry Pi.&lt;/p&gt;

&lt;h4 id=&#34;imu-and-drones:53cfe453f14e91a110c18a8c31803e02&#34;&gt;IMU and Drones&lt;/h4&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s MPU9250, together with the BMP280 altimeter, are the perfect combination to offload the Flight Control RealTime processing from a Raspberry Pi.  This allows you to use the full processing power of a Linux machine for machine vision and other processor intensive tasks, whilst maintaining an ultra reliable flight controller.&lt;/p&gt;

&lt;p&gt;The  &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 Github repo has an &lt;a href=&#34;https://github.com/Ardhat/ArdhatMFC&#34;&gt;updated version of the MultiWii Flight Controller&lt;/a&gt; library, extended with support for both the MPU9250, and the excellent Chrome  based &lt;a href=&#34;https://chrome.google.com/webstore/detail/cleanflight-configurator/enacoimjcgeinfnnnpajinjgmkahmfgb?hl=en&#34;&gt;Cleanflight Configurator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ubiqio.com/media/ArdhatCleanflight.jpg&#34; alt=&#34;image alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can also use apps such as &lt;a href=&#34;http://ez-gui.com/&#34;&gt;EZGUI&lt;/a&gt; to monitor and control your Ardhat based drone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ubiqio.com/media/ezgui.jpg&#34; alt=&#34;image alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s much more information on setting up MultWii  on the &lt;a href=&#34;http://www.multiwii.com/wiki/index.php?title=FAQ&#34;&gt;project Wiki&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;imu-and-robotics:53cfe453f14e91a110c18a8c31803e02&#34;&gt;IMU and Robotics&lt;/h4&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s  high performance IMU, together with Real-Time processing, PWM and analogue sensing , are essential requirements for the core of any robotics system. For those who like a challenge, one of the most interesting robot variants is the the 3D Balance Bot, more commonly called a &lt;a href=&#34;https://en.wikipedia.org/wiki/Ballbot&#34;&gt;BallBot&lt;/a&gt;.  This concept was originally rendered in Mindstorms by  &lt;a href=&#34;http://lejos-osek.sourceforge.net/&#34;&gt;Takashi Chikamasa&lt;/a&gt;,  using a Lejos, a custom Real-Time kernel for Mindstorms.&lt;/p&gt;

&lt;p&gt;&lt;div class=video-container&gt;
&lt;iframe src=&#34;https://www.youtube.com/embed/f8jxGsg3p0Y&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve updated the concept to Mindstorms EV3 using &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
, a motor shield and a 3-cell LiPo,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ubiqio.com/media/balbot.jpg&#34; alt=&#34;image alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;More details, including Lego Digital designer build instructions and code are in the &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 Github repository.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;much&lt;/strong&gt; more information on IMU programming see &lt;a href=&#34;https://github.com/Ardhat/MPU-9250&#34;&gt;this Article&lt;/a&gt; from Kris Winer, with an accompanying sketch &lt;a href=&#34;https://github.com/Ardhat/MPU-9250&#34;&gt;here&lt;/a&gt; that you can use if you want to drive the IMU directly from &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
.&lt;/p&gt;

&lt;p&gt;The MPU9250 is also compatible with the popular &lt;a href=&#34;https://github.com/richards-tech/RTIMULib-Arduino&#34;&gt;RTIMUlib&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript &amp; Node.js®</title>
      <link>http://ubiqio.com/doc/js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://ubiqio.com/doc/js/</guid>
      <description>

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s features can be accessed from a compatible host, such as Raspberry Pi, using the &lt;a href=&#34;https://github.com/firmata/protocol&#34;&gt;Firmata&lt;/a&gt; protocol over serial (for more information see &lt;a href=&#34;http://ubiqio.com/doc/progmodel/&#34;&gt;Programming Model&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Firmata provides a standardized mechanism to exchange information between a real-time processor such as &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
 and a host, useable by many programming languages.&lt;/p&gt;

&lt;p&gt;Javascript is an interpreted language like Python, and therefore relies on an interpreter to be running to execute its functions. The most common javascript interpreter is the web browser, and one of the fastest is the one built into Google&amp;rsquo;s Chrome browser.&lt;/p&gt;

&lt;p&gt;Node.js® is a JavaScript runtime built on Chrome&amp;rsquo;s V8 JavaScript engine, and uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. The Node.js 200,000+ package ecosystem, npm, is the &lt;a href=&#34;http://www.modulecounts.com/&#34;&gt;largest ecosystem&lt;/a&gt; of open source libraries in the world.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://johnny-five.io/&#34;&gt;&lt;img align=&#34;right&#34; style=&#34;height:200px; padding-left: 10px; padding-top: 5px&#34; src=&#34;http://ubiqio.com/media/johnnyfive.png&#34; alt=&#34;Johnny Five&#34; title=&#34;Johnny Five&#34;&gt;&lt;/a&gt; One of those many libraries includes &lt;a href=&#34;https://github.com/jgautier/firmata&#34;&gt;node firmata&lt;/a&gt;, which means that once node.js is installed, we can use the wide range of node packages directly with &lt;span style=&#34;font-family: &#39;Black Ops One&#39;, cursive; font-size:115%&#34;&gt;&amp;nbsp;Ardh@t&lt;/span&gt;
&amp;rsquo;s hardware, allowing the rapid creation of web-based sensor systems.&lt;/p&gt;

&lt;p&gt;In this example we are going to use
&lt;a href=&#34;http://johnny-five.io/&#34;&gt;Johnny-Five&lt;/a&gt;, which uses node firmata, and is an excellent programming framework which abstracts the hardware and makes cloud connected device programming much easier.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3 id=&#34;using-node-firmata-with-ardhat:615e3f22fa9cd8f45adc27486278fdbb&#34;&gt;Using Node Firmata with Ardhat&lt;/h3&gt;

&lt;p&gt;Raspian Jessie comes with a version of Node.js installed; unfortunately it is an older version that does not play well with many newer libraries, so we need to remove it and reinstall a newer version of Node.js (v4.x) together with npm.&lt;/p&gt;

&lt;p&gt;To do this we must uninstall the built-in version and re-install using the instructions below.&lt;/p&gt;

&lt;div class=&#34;note info&#34;&gt;
  &lt;p&gt;To enter these commands more easily, connect to the Pi using `ssh`, so that you can copy and paste them into the terminal.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;First we remove all the built in packages (but leave your current workspace if any, which by default is at ~/.node-red) .&lt;/p&gt;

&lt;section class=&#34;quickstart&#34; &gt;
  &lt;div class=&#34;grid&#34;&gt;
    &lt;div class=&#34;unit .half code&#34;&gt;
      &lt;p class=&#34;title&#34;&gt;Uninstall legacy node&lt;/p&gt;
      &lt;div class=&#34;shell&#34;&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo apt-get remove nodered&lt;/span&gt;
        &lt;/p&gt;        
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo apt-get remove nodejs nodejs-legacy&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo apt-get remove npm  &lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt; # if you installed npm&lt;/span&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;p&gt;Now we can proceed to re-install Node.js following the instructions below depending on your processor type. (As the Pi 2 uses a different processor (Arm v7) compared with the original Pi (Arm v6) the method of installing node.js is slightly different).&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Raspberry Pi 2&lt;/strong&gt;
&lt;section class=&#34;quickstart&#34; &gt;
  &lt;div class=&#34;grid&#34;&gt;
    &lt;div class=&#34;unit .half code&#34;&gt;
      &lt;p class=&#34;title&#34;&gt; Install Node.js on Raspberry Pi 2 - and other Arm7 processor based boards&lt;/p&gt;
      &lt;div class=&#34;shell&#34;&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;curl -sL &lt;a href=&#34;https://deb.nodesource.com/setup_4.x&#34;&gt;https://deb.nodesource.com/setup_4.x&lt;/a&gt; | sudo bash -&lt;/span&gt;
        &lt;/p&gt;&lt;br /&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo apt-get install -y build-essential python-dev python-rpi.gpio nodejs&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt;This also installs some additional dependencies.&lt;/span&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pi (version 1), Pi Zero, Pi A+/B+&lt;/strong&gt;&lt;/p&gt;

&lt;section class=&#34;quickstart&#34; &gt;
  &lt;div class=&#34;grid&#34;&gt;
    &lt;div class=&#34;unit .half code&#34;&gt;
      &lt;p class=&#34;title&#34;&gt;Install Node.js on Pi (version 1), Pi Zero, Pi A+/B+&lt;/p&gt;
      &lt;div class=&#34;shell&#34;&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;wget http://node-arm.herokuapp.com/node_archive_armhf.deb&lt;/span&gt;
        &lt;/p&gt;        
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo npm cache clean&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo dpkg -i node_archive_armhf.deb&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo apt-get install build-essential python-dev python-rpi.gpio&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt;This also installs some additional dependencies.&lt;/span&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;section class=&#34;quickstart&#34; &gt;
  &lt;div class=&#34;grid&#34;&gt;
    &lt;div class=&#34;unit .half code&#34;&gt;
      &lt;p class=&#34;title&#34;&gt; Install the latest stable version of Node-RED and Johnny-Five&lt;/p&gt;
      &lt;div class=&#34;shell&#34;&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;sudo npm install -g --unsafe-perm  node-red &lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;npm install johnny-five &lt;/span&gt;
        &lt;/p&gt;       
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;p&gt;Now we are ready to run our javascript program on node.js driving Ardhat.&lt;/p&gt;

&lt;p&gt;Create a file with the following contents:&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;var five = require(&amp;quot;johnny-five&amp;quot;),
    board = new five.Board({ port: &amp;quot;/dev/ttyS0&amp;quot; });

board.on(&amp;quot;ready&amp;quot;, function() {
  // Create an Led on pin 9
  var led = new five.Led(9);

  // Strobe the pin on/off, defaults to 100ms phases
  led.strobe();
});

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Save it as test.js, and run it with&lt;/p&gt;

&lt;section class=&#34;quickstart&#34; &gt;
  &lt;div class=&#34;grid&#34;&gt;
    &lt;div class=&#34;unit .half code&#34;&gt;
      &lt;p class=&#34;title&#34;&gt; Run the test Javascript program&lt;/p&gt;
      &lt;div class=&#34;shell&#34;&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;path&#34;&gt;~&lt;/span&gt;
          &lt;span class=&#34;prompt&#34;&gt;$&lt;/span&gt;
          &lt;span class=&#34;command&#34;&gt;node test.js&lt;/span&gt;
        &lt;/p&gt;   
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt;1455005904950 Connected /dev/ttyS0&lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt;1455005910077 Repl Initialized &lt;/span&gt;
        &lt;/p&gt;
        &lt;p class=&#34;line&#34;&gt;
          &lt;span class=&#34;output&#34;&gt;&gt;&gt;&lt;/span&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;p&gt;Ardhat&amp;rsquo;s activity LED will blink quickly.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Repl Initialized&amp;rdquo; indicates that the Johnny-Five &amp;ldquo;Read Evaluate Print Loop&amp;rdquo; is running, which means that you have a node prompt at which you can enter &lt;a href=&#34;http://johnny-five.io/examples/repl/&#34;&gt;node commands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For a more in-depth example, see this &lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/&#34;&gt;article&lt;/a&gt; which shows how to build a simple &lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/#home-monitoring&#34;&gt;home-monitoring system&lt;/a&gt;, similar to commercial products like Nest and Hive.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2016/02/hardware-hacking-with-javascript-internet-of-things/#home-monitoring&#34;&gt;&lt;img  style=&#34;height:200px&#34; src=&#34;http://ubiqio.com/media/diynest.jpg&#34; alt=&#34;DIYnest&#34; title=&#34;DIYnest&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://nodered.org/&#34;&gt;&lt;img align=&#34;right&#34; style=&#34;height:200px; padding-left: 10px; padding-top: 5px&#34; src=&#34;http://ubiqio.com/media/node-red-screenshot-sm.png&#34; alt=&#34;NodeRED&#34; title=&#34;NodeRED&#34;&gt;&lt;/a&gt;
An alternative to programming in javascript directly is to use the visual programming approach offered by Node-RED.&lt;/p&gt;

&lt;p&gt;Node-RED provides a browser-based flow editor that makes it easy to wire together flows using a collection of &amp;lsquo;Nodes&amp;rsquo; in a &amp;lsquo;palette&amp;rsquo;. Flows can then be deployed in a single-click. For more info see the &lt;a href=&#34;http://nodered.org/&#34;&gt;Node-Red website&lt;/a&gt; , or &lt;a href=&#34;https://learn.adafruit.com/raspberry-pi-hosting-node-red/what-is-node-red&#34;&gt;this excellent tutorial&lt;/a&gt; on Adafruit.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>